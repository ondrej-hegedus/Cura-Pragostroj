name: Get default installer values

on:
  workflow_call:
    inputs:
      cura_conan_version:
        required: true
        type: string

      latest_release:
        required: true
        type: string

      latest_release_schedule_hour:
        required: true
        type: number

      latest_release_tag:
        required: true
        type: string

    outputs:
      cura_conan_version:
        description: "The Conan version used to build Cura"
        value: ${{ jobs.default_values.outputs.cura_conan_version }}

      release_tag:
        description: "The git tag used to upload the Artifacts to the release `nightly` or `nightly-5.6 (for example)"
        value: ${{ jobs.default_values.outputs.release_tag }}

jobs:
  default_values:
    runs-on: ubuntu-latest
    outputs:
      cura_conan_version: ${{ steps.default.outputs.cura_conan_version  }}
      release_tag: ${{ steps.default.outputs.release_tag  }}

    steps:
      - name: Output default values
        id: default
        shell: python
        run: |
          import os
          import datetime
          
          if "${{ github.event_name }}" != "schedule":
              cura_conan_version = "${{ inputs.cura_conan_version }}"
          else:
              now = datetime.datetime.now()
              cura_conan_version = "cura/latest@ultimaker/stable" if now.hour == int(${{ inputs.latest_release_schedule_hour }}) else "cura/latest@ultimaker/testing"
          
          release_tag = f"${{ inputs.latest_release_tag }}-${{ inputs.latest_release }}" if "/stable" in cura_conan_version else "${{ inputs.latest_release_tag }}"
          
          # Set cura_conan_version environment variable
          output_env = os.environ["GITHUB_OUTPUT"]
          content = ""
          if os.path.exists(output_env):
              with open(output_env, "r") as f:
                  content = f.read()
          with open(output_env, "w") as f:
              f.write(content)
              f.writelines(f"cura_conan_version={cura_conan_version}\n")
              f.writelines(f"release_tag={release_tag}\n")