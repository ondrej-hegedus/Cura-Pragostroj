name: unit-test-post

on:
  workflow_call:
    inputs:
      event:
        required: true
        type: string

      conclusion:
        required: true
        type: string

permissions:
  contents: read
  issues: write
  checks: write
  pull-requests: write

env:
  CONAN_LOGIN_USERNAME: ${{ secrets.CONAN_USER }}
  CONAN_PASSWORD: ${{ secrets.CONAN_PASS }}

jobs:
  publish-test-results:
    if: ${{ inputs.event == 'pull_request' }}
    runs-on: ubuntu-latest

    steps:
      - name: Download analysis results
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{ secrets.CURA_UNIT_TESTS_POST_PAT }}
          script: |
            let artifacts = await github.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: ${{github.event.workflow_run.id }},
            });
            let matchArtifact = artifacts.data.artifacts.filter((artifact) => {
                return artifact.name == "test-result"
            })[0];
            let download = await github.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: matchArtifact.id,
                archive_format: "zip",
            });
            let fs = require("fs");
            fs.writeFileSync("${{github.workspace}}/test-result.zip", Buffer.from(download.data));

      - name: Set environment variables
        run: |
          mkdir pr_env
          unzip test-result.zip -d pr_env
          echo "pr_id=$(cat pr_env/pr-id.txt)" >> $GITHUB_ENV
          echo "pr_head_repo=$(cat pr_env/pr-head-repo.txt)" >> $GITHUB_ENV
          echo "pr_head_ref=$(cat pr_env/pr-head-ref.txt)" >> $GITHUB_ENV

      - uses: actions/checkout@v3
        with:
          repository: ${{ env.pr_head_repo }}
          ref: ${{ env.pr_head_ref }}
          persist-credentials: false

      - name: Redownload analysis results
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{ secrets.CURA_UNIT_TESTS_POST_PAT }}
          script: |
            let artifacts = await github.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: ${{github.event.workflow_run.id }},
            });
            let matchArtifact = artifacts.data.artifacts.filter((artifact) => {
                return artifact.name == "test-result"
            })[0];
            let download = await github.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: matchArtifact.id,
                archive_format: "zip",
            });
            let fs = require("fs");
            fs.writeFileSync("${{github.workspace}}/test-result.zip", Buffer.from(download.data));

      - name: Extract analysis results
        run: |
          mkdir -p tests
          unzip test-result.zip -d tests

      - name: Publish Unit Test Results
        id: test-results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          github-token: ${{ secrets.CURA_UNIT_TESTS_POST_PAT }}
          files: "tests/**/*.xml"

      - name: Conclusion
        run: echo "Conclusion is ${{ steps.test-results.outputs.json && fromJSON( steps.test-results.outputs.json ).conclusion }}"
